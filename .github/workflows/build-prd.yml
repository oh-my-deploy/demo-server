name: "build-deploy-dev"

on:
  push:
    tags:
      - v*

permissions:
  contents: read
  id-token: write

env:
  registry: docker.io
  repository: tae2089/omd-demo-server
  BUILD_ENV: prod

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag-name: ${{ steps.build.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: docker build push
        id: build
        uses: tae2089/github-action-modules/actions/docker-build-push@main
        with:
          repository: ${{ env.repository }}
          registry: ${{ env.registry }}
          dockerhub_username: ${{ secrets.DOCKER_USERNAME }}
          dockerhub_password: ${{ secrets.DOCKER_PASSWORD }}
          prefix: ${{ env.BUILD_ENV }}

      - name: slack notification
        uses: tae2089/github-action-modules/actions/slack-notify@main
        with:
          slack-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          action-name: "demo server prod build"

  deploy:
    needs: [build]
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: new tag deploy
        uses: tae2089/github-action-modules/actions/update-tag-in-deploy@main
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          branch: dev
          path: "demo-1/program.yaml"
          key: ".spec.app.container.image"
          value: "${{env.registry}}/${{ secrets.DOCKER_USERNAME }}:${{ needs.build.outputs.tag-name }}"

      - name: slack notification
        uses: tae2089/github-action-modules/actions/slack-notify@main
        with:
          slack-token: ${{ secrets.SLACK_BOT_TOKEN }}
          slack-channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
          action-name: "demo server prod deply"
